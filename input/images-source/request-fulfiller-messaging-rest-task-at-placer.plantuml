@startuml
'skinparam svgDimensionStyle false
autonumber
title Request with Fulfiller Acceptance (Messaging/REST - Task at Placer)
== 1. Create Request ==

Placer <--> Fulfiller: Precoordinate events / topics of interest
Placer -> Placer: Create Order. ServiceRequest **and Task** Available for Query
Placer -> Fulfiller: Message with Event for new Referral including references to ServiceRequest, Task, and supporting Info at Placer

note over Placer, Fulfiller
Task.basedOn points back to the ServiceRequest on the Fulfiller's server. 
Can include additional supporting info in ServiceRequest.info or in the Task if Fulfiller-specific
endnote

Fulfiller -> Placer: Update Task.businessStatus 'requested' => Accepted

group If Placer has an update come in
    Placer --> Placer: Review if this is an update relevant for the Fulfiller
    Placer -> Fulfiller: Send Message with Update
    end

== 2. Perform Service ==
group If Placer wants status updates
    Fulfiller <-- Fulfiller: Check if there are interim updates Placer wants
    Fulfiller -> Placer: Send Message with Update
else 
    Fulfiller -> Placer: Update Task with status or inputs
    end
    
group If Fulfiller creating output document
    Fulfiller <- Fulfiller: Performs Service, creates Output Document
    Fulfiller -> Placer: Update Task.output => Output document
    end
    
Fulfiller -> Placer: Update Task.businessStatus

Placer -> Placer: Update ServiceRequest.status == Completed

group Optionally, if Placer needs to be able to surface that content in future:
    Placer -> Placer: Create / surface copy of output document with Meta.source == Fulfiller's document as source of truth
    
    note over Placer, Fulfiller
    The DocumentReference, DiagnosticReport, etc. can also point back to the original ServiceRequest on the Placer's system
    endnote
    
    group If Placer may later addend/modify that document:
    Placer -> Placer: Placer updates their copy, Meta.source, and Provenance
    Placer -> Fulfiller: Sends Message back to Fulfiller. Event for Correction. Have the Fulfiller's Output document as .focus, and include their correction. 
    end
    end
@enduml
