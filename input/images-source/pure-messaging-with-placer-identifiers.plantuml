@startuml
title Referrals Outline - Messaging w/ Placer Identifiers


==Pre-Coordination==
Placer <--> Fulfiller: Coordinate business agreement

Placer --> Fulfiller: Register client

Fulfiller --> Placer: Register client


||30||
==Initial Notification==
Placer -> Placer: Placer generates Request. Creates internal representation.
Placer -> Fulfiller: Authenticates to Fulfiller
note over Placer, Fulfiller: This may be a flow like OAuth 2.0 client credentials
Fulfiller -> Placer: Provides Access Token scoped to allow messaging
Placer -> Fulfiller: Sends message with MessageHeader.focus as a Task, and supporting info such as the ServiceRequest

Fulfiller <- Fulfiller: Creates their own internal representation.
Fulfiller -> Placer: Acknowledges the request.
||20||
note over Placer, Fulfiller: Note - the Fulfiller may or may not accept at this stage, and may or may\nnot send back their own identifier. Can be a comm ack or a decision.
||20||
group If potential Fulfiller has further processing to do, like checking availability before accepting
    Fulfiller <- Fulfiller: Processes the Request
    Fulfiller -> Placer: Requests additional info necessary for processing. Sends a message with Task.identifier\nthat identifies this relates to the earlier request, and a businessStatus indicating info needed.
    Placer -> Placer: May review what else can be shared
    Placer -> Fulfiller: Sends additional info in a message with Task in focus, Task.identifier indicating\nthe relation to the earlier request, and Status of Requested
    Fulfiller -> Placer: Accepts the request
end
||20||
group If Placer has to accept a 'bid' from the potential Fulfiller
    Placer -> Fulfiller: Send confirmation they should provide the service
end

||30||

==Share Updates==
group If Placer has additional info come in
    Placer -> Fulfiller: Send status updates, additional info, etc.
end
||10||
group If Placer wants status updates and Fulfiller can send
    Fulfiller -> Placer: Send status updates (scheduled, etc.)
end
||30||

==Share Outcome==
Fulfiller <- Fulfiller: Generate outcome/result with internal identifier
Fulfiller -> Placer: Notify of outcome via a Message with Task in focus, Task.Status updated, and Task.output referencing any output
Placer -> Placer: Process outcome and create internal representation

@enduml
