@startuml
title Referrals Outline - Messaging w/ Placer Identifiers

== Initial Notification ==
note over Placer, Fulfiller: Assume client registration + business agreements all occur beforehand. Assume Single business org, but could separate resource server and auth server

Placer -> Placer: Placer generates Request. Creates internal representation.
Placer -> Fulfiller: Authenticates to Fulfiller. Assume something like Client Credentials Flow
Fulfiller -> Placer: Provides Access Token scoped to allow messaging
Placer -> Fulfiller: 

Fulfiller <- Fulfiller: Creates their own internal representation.
Fulfiller -> Placer: Acknowledges the request.

note over Placer, Fulfiller: Note - may or may not accept. May or may not send back their own identifier. Can be a comm ack or a decision.

group If potential fulfiller has further processing to do, like checking availability before accepting
    Fulfiller <- Fulfiller: Processes the Request
    Fulfiller -> Placer: Requests additional info necessary for processing
    Placer -> Placer: May review what else can be shared
    Placer -> Fulfiller: Sends additional info
    Fulfiller -> Placer: Accepts the request
end

group If placer has to accept a 'bid' from the potential fulfiller
    Placer -> Fulfiller: Send confirmation they should provide the service
end

== Share Updates ==

group If placer has additional info come in
    Placer -> Fulfiller: Send status updates, additional info, etc.
end

group If placer wants status updates and fulfiller can send
    Fulfiller -> Placer: Send status updates (scheduled, etc.)
end

== Share Outcome ==

Fulfiller <- Fulfiller: Generate outcome/result with internal identifier
Fulfiller -> Placer: Notify of outcome (share own identifier)
Placer -> Placer: Process outcome and create internal representation
Placer -> Placer: Update status. Could include 'further work needed'.
@enduml
