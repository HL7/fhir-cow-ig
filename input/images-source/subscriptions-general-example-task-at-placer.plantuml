@startuml
autonumber
'skinparam svgDimensionStyle false
'skinparam sequenceMessageAlign center


== Pre-Coordination==

Placer --> Placer: Register Fulfiller as a client

Fulfiller <-- Fulfiller: Register Placer as a client

Placer <-- Fulfiller: inform Placer of the FHIR endpoint on which SubscriptionStatus-notifications should be sent


Placer --> Placer: Create an administrative subscription for the Fulfiller on Tasks for which they are designated as the Owner of the task
||20||


== Create Request == 

Placer -> Placer : Create Order, ServiceRequest, Task\n**per (potential) Fulfiller**

Placer -> Fulfiller: POST SubscriptionStatus notification bundle

note over Placer,Fulfiller
SubscriptionStatus.notificationEvent.focus is the Task. 

The Placer may include the ServiceRequest and references from .supportingInfo in 
.additionalContext
end note

note over Placer,Fulfiller
Task.basedOn is the ServiceRequest at the Placer. 
end note

||20||

Fulfiller -> Placer : Query ServiceRequest.supportingInfo, ServiceRequest.reason, etc.

Fulfiller -> Placer : Update Task. businessStatus from 'requested' to 'accepted' (or supply a Plan for Bid flows via Task.input for Placer review)


group If Placer will review bids
    Placer -[hidden]>Fulfiller:
    Placer --> Placer : Review. Cancel tasks to other potential Fulfillers as needed
    Placer -> Placer : Update Task.status, Task.businessStatus, etc. 
    Placer -> Fulfiller : SubscriptionStatus notification \nindicating status is updated and they 'won' the bid

end

group If Fulfiller will perform a more\nspecific service
    Fulfiller-[hidden]>Placer:
    Fulfiller <- Fulfiller : Create ServiceRequest with .basedOn\npointing to the Placer's ServiceRequest 

end

==Perform Service==
group If Fulfiller creating an output document
    Fulfiller-[hidden]>Placer:
    Fulfiller <- Fulfiller : Performs service, creates Output
    Fulfiller -> Placer : Updates Task.Output -> Outcome document on Fulfiller's server

end

Placer <-> Placer : Update Task and ServiceRequest.status -> Completed

note over Placer,Fulfiller
Interim statuses may be used if the Placer must decide if the service is complete 
end note

group Optionally, if Placer needs to be able to surface\nthat Outcome in future
    Placer-[hidden]>Fulfiller
    Placer <-> Fulfiller: Read Output Document
    Placer -> Placer : Save a copy. If needed, indicate that the Fulfiller's copy is the source of truth via Provenance.location, etc.\nNote that in many cases, the Event resource itself indicates origin. 
end

@enduml
