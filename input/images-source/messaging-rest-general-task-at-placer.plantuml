@startuml
skinparam svgDimensionStyle false
title Referrals - Messaging w/ Task at Fulfiller General

autonumber

== 1. Create Request ==
Placer <--> Fulfiller: Precoordinate events / topics of interest
Placer -> Placer: Create Order. ServiceRequest Available for Query
Placer -> Fulfiller: Task.create

note over Placer, Fulfiller: Task.basedOn points back to the ServiceRequest on the fulfiller's server.\nCan include additional supporting info in ServiceRequest.info or in the Task if Fulfiller-specific.\nPlacer can cancel that task whenever they want.

Fulfiller -> Placer: Query ServiceRequest.supportingInfo, ServiceRequest.reason, etc.
Fulfiller <- Fulfiller: Update Task.businessStatus 'requested' => Accepted

group If a message has been defined and pre-coordinated that Placer wants update
    Fulfiller -> Placer: Send Message bundle with event "Accepted"
    Placer -> Placer: Update status of tracking if needed
end

group if Placer has an update come in
    Placer -> Placer: Review if this is an update relevant for the Fulfiller
    Placer -> Fulfiller: Send Message with Update
end

group if Placer wants to check status and doesn't trust they receive updates
    Placer -> Fulfiller: Query for Task status
end

== 2. Perform Service ==
group if Placer wants status updates
    Fulfiller <- Fulfiller: check if there are interim updates Placer wants
    Fulfiller -> Placer: Send Message with Update
end

group If Fulfiller creating output document
    Fulfiller <- Fulfiller: Performs Service, creates Output Document
    Fulfiller <- Fulfiller: Update Task.output => Output document
    autonumber stop
    Fulfiller -[hidden]-> Placer: extend
    autonumber resume
end

Fulfiller <- Fulfiller: Update Task.businessStatus
Fulfiller -> Placer: Send Message for Task update with .focus as the Task. Include the output document
Placer -> Placer: Update ServiceRequest.status == Completed

group Optionally if Placer needs to be able to surface that content in future
    Placer -> Placer: Create / surface copy of output document with Meta.source == Fulfiller's document as source of truth
    note over Placer, Fulfiller: the DocumentReference, DiagnosticReport, etc. can also point back to the original ServiceRequest on the placer's system
    group If Placer may later addend/ modify that document
        Placer -> Placer: Placer updates their copy, Meta.source, and Provenance
        Placer -> Fulfiller: Sends Message back to Fulfiller. Event for Correction. Have the Fulfiller's Output document as .focus, and include their correction.
    end
end
@enduml
